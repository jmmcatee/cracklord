package common

import (
	"github.com/pborman/uuid"
	"time"
)

type Job struct {
	UUID             string            // UUID generated by the Queue
	ToolUUID         string            // ID of the tool to use with this job
	Name             string            // Name of the job
	Status           string            // Status of the job
	Error            string            // Last returned error from the tool
	StartTime        time.Time         // Start time of the job
	ETC              string            // The estimated time of completion
	Owner            string            // Owner provided by the web frontend
	ResAssigned      string            // Resource this job is assinged to if any
	CrackedHashes    int64             // # of hashes cracked
	TotalHashes      int64             // # of hashes provided
	Progress         float64           // # % of cracked/provided
	Parameters       map[string]string // Parameters returned to the tool
	PerformanceData  map[string]string // Some performance status map[timestamp]perf#
	PerformanceTitle string            // Title of the perf #
	OutputData       [][]string        // A 2D array of rows for output values
	OutputTitles     []string          // The headers for the 2D array of rows above
}

func NewJob(tooluuid string, name string, owner string, params map[string]string) Job {
	return Job{
		UUID:            uuid.New(),
		ToolUUID:        tooluuid,
		Name:            name,
		Status:          STATUS_CREATED,
		Owner:           owner,
		Parameters:      params,
		PerformanceData: make(map[string]string),
	}
}
